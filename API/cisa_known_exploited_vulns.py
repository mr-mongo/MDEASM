import mdeasm, requests

# name of the EASM resource
workspace_name = ''

tenant_id = ''
subscription_id = ''

# service principal needs to have Contributor permissions on EASM resource
client_id = ''
client_secret = ''

easm = mdeasm.Workspaces(workspace_name=workspace_name, tenant_id=tenant_id, subscription_id=subscription_id, client_id=client_id, client_secret=client_secret)

# cisa known exploited vulnerabilities download
#cisa_kev_csv_url = 'https://www.cisa.gov/sites/default/files/csv/known_exploited_vulnerabilities.csv'
cisa_kev_json_url = 'https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json'

cisa_kev_list = [vuln['cveID'] for vuln in requests.get(cisa_kev_json_url).json()['vulnerabilities']]

# the cvss severity queries that populate the dashboard
query_for_assets_with_cves = 'state = confirmed | kind = host | cveID !empty'

# this will get all the assets with CVEs
# this function will also auto-create facet filters for all asset details
# which will be available through <mdeasm.Workspaces object>.filters.<filter_name>
easm.get_workspace_assets(query_filter=query_for_assets_with_cves, asset_list_name='assets_with_cves', max_page_size=100, get_all=True)

print(f"found {len(easm.assets_with_cves.assets)} assets with CVEs")


# if we chose not to auto-create facet filters above (if we passed 'auto_create_facet_filters=False')
# we can explicitly create individual filters with create_facet_filter()
# we can extract all the CVEs and Scores from the assets we retrieved above
# CVEs are part of the webComponent detail, and so can only be parsed out using attribute_name='webComponents' 
#easm.create_facet_filter(asset_list_name='cvss_10', attribute_name='webComponents')


# we can query that just-created facet filter for any search term (default is case insensitive)
# this will find all CVEs in the workspace that match a CVE ID from CISA's Known Exploited Vulnerabilities 
# results can be saved to file using out_format ('csv' or 'json')
# either to current (script's) directory or a location of your choice using out_path
# if no out_format is specified, results will be printed to the terminal
for cve_id in cisa_kev_list:
    easm.query_facet_filter(search=cve_id, facet_filter='cveId', out_format='csv', out_path='C:\\Users\\Public\\Downloads')