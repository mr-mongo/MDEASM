let workspace = '{_easm_workspace_name}';
let lastseen = ago(30d);
let oldestsnapshot = EasmAsset|where WorkspaceName == workspace|summarize by SnapshotDateTime|sort by SnapshotDateTime asc|take 1;
union isfuzzy=true (
    EasmHostAsset
	|where WorkspaceName == workspace
    |join kind=anti oldestsnapshot on SnapshotDateTime
    |summarize hint.strategy=shuffle arg_max(SnapshotDateTime, *) by AssetUuid
    |where AssetLastSeen > lastseen
    |where array_length(Ports) > 0
    |extend System = Host
    |extend Source = 'EasmHostAsset'
    |mv-expand Ports
    |extend Port = toint(Ports.Port)
    |extend LastPortState = tostring(Ports.LastPortState)
    |extend PortLastSeen = todatetime(Ports.PortStateLastSeen)
    |where PortLastSeen > lastseen
    |project System, Port, LastPortState, Source,PortLastSeen
    ),
    (
    EasmIpAddressAsset
	|where WorkspaceName == workspace
    |join kind=anti oldestsnapshot on SnapshotDateTime
    |summarize hint.strategy=shuffle arg_max(SnapshotDateTime, *) by AssetUuid
    |where AssetLastSeen > lastseen
    |where array_length(Ports) > 0
    |extend System = IpAddress
    |extend Source = 'EasmIpAddressAsset'
    |mv-expand Ports
    |extend Port = toint(Ports.Port)
    |extend LastPortState = tostring(Ports.LastPortState)
    |extend PortLastSeen = todatetime(Ports.PortStateLastSeen)
    |where PortLastSeen > lastseen
    |project System, Port, LastPortState, Source,PortLastSeen
    )
|extend Keep = case('{_easm_system_type}' == 'IPs Only', 'EasmIpAddressAsset', '{_easm_system_type}' == 'Hosts Only', 'EasmHostAsset', 'EasmHostAsset,EasmIpAddressAsset')
|where Keep has Source
|join (EasmAssetBanner
    |where WorkspaceName == workspace
    |where BannerLastSeen > lastseen
    |summarize hint.strategy=shuffle arg_max(SnapshotDateTime, *) by AssetName,Port
    |project-keep AssetName,Port
) on $left.System == $right.AssetName, $left.Port == $right.Port
|sort by System {_easm_port_sort}, Port {_easm_port_sort}
|project-away Source,Keep,Port1,AssetName
//|summarize AllPorts = make_set(Port) by System
//|summarize AllSystems = make_set(System) by Port